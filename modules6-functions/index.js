'use strict'
/**
 Задание 1.

 В прошлом модуле в разделе «Циклы» вы выполняли следующее задание:

 Дан массив. Нужно вывести в консоль количество чётных и нечётных элементов в массиве. Если в массиве есть нулевой элемент, то он учитывается и выводится отдельно.

 При выполнении задания необходимо учесть, что массив может содержать не только числа, но и, например, знаки, null и так далее.

 На этот раз оформите решение в виде функции, постарайтесь дать этой функции корректное название, вызовите функцию, проанализируйте синтаксис.
 */


const arr2 = [1, 5, 8,  0,  12, 15, 34, 87, 12, 234, 11, 0, 11, 13, 0, 0];



function printEvensAndOdds (arr) {
    const evens = [];
    const odds = [];
    const nulls = [];
    for (let i = 0; i < arr.length; i++) {
        if (arr2[i] === 0) {
            nulls.push(arr[i]);
        } else if (arr2[i] % 2 == 0) {
            evens.push(arr[i]);
        } else {
            odds.push(arr[i]);
        }
    }

    console.log('Количество нулей: ', nulls.length);
    console.log('Количество четных чисел: ', evens.length);
    console.log('Количество нечетных чисел: ', odds.length);
}

printEvensAndOdds(arr2);

/*Задание 2.

Написать функцию, которая принимает на входе любое число (но не больше 1 000), определяет, является ли оно простым,
    и выводит простое число или нет. Если введено больше 1 000,
    то выводится сообщение, что данные неверны. Обратите внимание на числа 0 и 1.

Здесь вам пригодятся знания из предыдущего модуля — циклы и условные операторы.
*/



function isPrime(n) {
    if(typeof n !== 'number' || n === 0 || n === 1 || n > 1000 || isNaN(n)) {
        console.log('Не корректное значение. Введите число не равное 0 и 1 и не большое чем 1000')
    } else {
        let flag = true;
        for (let i = 2; i < n; i++) {
            if(n % i === 0) {
                flag = false;
                console.log(`Число ${n} не является простым`);
                break;
            }
        }
        if(flag) {
            console.log(`Число ${n} является простым`);
        }
    }
}
isPrime(11);

/*
 Задание 3.
Написать функцию, которая принимает число как аргумент и возвращает функцию, которая также принимает число как аргумент
и возвращает сумму этих двух чисел.
Выведите в консоль результат.
* */

const func = function (num1) {
    return function f2 (num2) {
       return  num1 + num2;
    }
}

console.log(func(11)(4));


/*
* Задание 4.

Напишите функцию, которая принимает два числа. Каждую секунду необходимо выводить в консоль, начиная от первого и заканчивая вторым. Используйте setInterval.
Например, пользователь ввёл числа 5 и 15. Каждую секунду в консоль должно печататься число, начиная с 5 и заканчивая 15 (всего 11 чисел: 5 6 7 8 9 10 11 12 13 14 15).
* */

// function printNumbers(from, to) {
//     let current = from;
//
//     let timerId = setInterval(function() {
//         console.log((current));
//         if (current === to) {
//             clearInterval(timerId);
//         }
//         current++;
//     }, 1000);
// }
//
// printNumbers(0, 10);

/*
* Задание 5.

Напишите функцию, которая принимает два натуральных числа x и n и возвращает x в степени n. Иначе говоря,
*  умножает x на себя n раз и возвращает результат.

Используйте Arrow Function синтаксис.

Протестируйте функцию на любых значениях и выведите результат в консоль.
* */


// const toPower = (a, b) => a**b;
//
//
// console.log(toPower(3, 3));
{
    const User = {

        name: 'Vasya',

        getName: () => this.name
    }

    console.log( typeof User.getName(), '1-call' );

    console.log(window)
}



{
    const User = {

        name: 'Vasya',

        getName() {

            return this.name;

        }

    }

    console.log( User.getName(), '2-call' );
}
